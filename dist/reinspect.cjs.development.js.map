{"version":3,"file":"reinspect.cjs.development.js","sources":["../src/context.ts","../src/StateInspector.tsx","../src/useReducer.ts","../src/useState.ts"],"sourcesContent":["import React, { Reducer } from \"react\"\nimport { Store } from \"redux\"\n\ntype UnsubscribeFn = () => void\n\nexport type EnhancedStore = Store & {\n  registerHookedReducer: (\n    reducer: Reducer<any, any>,\n    initialState: any,\n    reducerId: string | number\n  ) => UnsubscribeFn\n}\n\nexport const StateInspectorContext = React.createContext<\n  EnhancedStore | undefined\n>(undefined)\n","import React, { ReducerAction, Reducer, useMemo, useEffect } from \"react\"\nimport { createStore } from \"redux\"\nimport { EnhancedStore, StateInspectorContext } from \"./context\"\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__?: any\n  }\n}\n\ninterface StateInspectorProps {\n  name?: string\n  initialState?: any\n}\n\ninterface StoreReducerAction {\n  type: string\n  payload: any\n}\n\nconst omit = (obj: Record<string, any>, keyToRemove: string) =>\n  Object.keys(obj)\n    .filter(key => key !== keyToRemove)\n    .reduce<Record<string, any>>((acc, key) => {\n      acc[key] = obj[key]\n\n      return acc\n    }, {})\n\nexport const StateInspector: React.FC<StateInspectorProps> = ({\n  name,\n  initialState = {},\n  children\n}) => {\n  const store = useMemo<EnhancedStore | undefined>(() => {\n    if (typeof window === \"undefined\" || !window.__REDUX_DEVTOOLS_EXTENSION__) {\n      return undefined\n    }\n\n    const registeredReducers: Record<\n      string | number,\n      Reducer<any, ReducerAction<any>>\n    > = {}\n\n    const storeReducer: Reducer<any, StoreReducerAction> = (state, action) => {\n      const actionReducerId = action.type.split(\"/\")[0]\n      const isInitAction = /\\/_init$/.test(action.type)\n      const isTeardownAction = /\\/_teardown$/.test(action.type)\n\n      const currentState = isTeardownAction\n        ? omit(state, actionReducerId)\n        : { ...state }\n\n      return Object.keys(registeredReducers).reduce((acc, reducerId) => {\n        const reducer = registeredReducers[reducerId]\n        const reducerState = state[reducerId]\n        const reducerAction = action.payload\n        const isForCurrentReducer = actionReducerId === reducerId\n\n        if (isForCurrentReducer) {\n          acc[reducerId] = isInitAction\n            ? action.payload\n            : reducer(reducerState, reducerAction)\n        } else {\n          acc[reducerId] = reducerState\n        }\n\n        return acc\n      }, currentState)\n    }\n\n    const store: EnhancedStore = createStore(\n      storeReducer,\n      initialState,\n      window.__REDUX_DEVTOOLS_EXTENSION__({\n        name: name || \"React state\",\n        actionsBlacklist: [\"/_init\", \"/_teardown\"]\n      })\n    )\n\n    store.registerHookedReducer = (reducer, initialState, reducerId) => {\n      registeredReducers[reducerId] = reducer\n\n      store.dispatch({\n        type: `${reducerId}/_init`,\n        payload: initialState\n      })\n\n      return () => {\n        delete registeredReducers[reducerId]\n\n        store.dispatch({\n          type: `${reducerId}/_teardown`\n        })\n      }\n    }\n\n    return store\n  }, [])\n\n  useEffect(() => {\n    store && store.dispatch({ type: \"REINSPECT/@@INIT\", payload: {} })\n  }, [])\n\n  return (\n    <StateInspectorContext.Provider value={store}>\n      {children}\n    </StateInspectorContext.Provider>\n  )\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  useReducer as useReactReducer,\n  Reducer,\n  Dispatch,\n  useState,\n  useEffect,\n  useContext,\n  ReducerState,\n  ReducerAction\n} from \"react\"\nimport { StateInspectorContext, EnhancedStore } from \"./context\"\n\nexport function useHookedReducer<S, A>(\n  reducer: Reducer<S, A>,\n  initialState: S,\n  store: EnhancedStore,\n  reducerId: string | number\n): [S, Dispatch<A>] {\n  const [initialReducerState] = useState(() => {\n    const initialStateInStore = store.getState()[reducerId]\n    return initialStateInStore === undefined\n      ? initialState\n      : initialStateInStore\n  })\n\n  const [localState, setState] = useState<S>(initialReducerState)\n\n  const [dispatch] = useState<Dispatch<A>>(() => {\n    return (action: any) => {\n      if (\n        action &&\n        typeof action === \"object\" &&\n        typeof action.type === \"string\"\n      ) {\n        store.dispatch({\n          type: `${reducerId}/${action.type}`,\n          payload: action\n        })\n      } else {\n        store.dispatch({\n          type: reducerId,\n          payload: action\n        })\n      }\n    }\n  })\n\n  const [cleanup] = useState(() => {\n    const teardown = store.registerHookedReducer(\n      reducer,\n      initialReducerState,\n      reducerId\n    )\n    let lastReducerState = localState\n    const unsubscribe = store.subscribe(() => {\n      const storeState: any = store.getState()\n      const reducerState = storeState[reducerId]\n\n      if (lastReducerState !== reducerState) {\n        setState(reducerState)\n      }\n\n      lastReducerState = reducerState\n    })\n    return () => {\n      teardown()\n      unsubscribe()\n    }\n  })\n\n  useEffect(() => {\n    return cleanup\n  }, [cleanup])\n\n  return [localState, dispatch]\n}\n\nexport function useReducer<R extends Reducer<any, any>>(\n  reducer: R,\n  initialState: ReducerState<R>,\n  id?: string | number\n): [ReducerState<R>, Dispatch<ReducerAction<R>>]\nexport function useReducer<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initialState: I,\n  initializer: (arg: I) => ReducerState<R>,\n  id?: string | number\n): [ReducerState<R>, Dispatch<ReducerAction<R>>]\nexport function useReducer<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initialState: I & ReducerState<R>,\n  initializer: (arg: I & ReducerState<R>) => ReducerState<R>,\n  id?: string | number\n): [ReducerState<R>, Dispatch<ReducerAction<R>>]\nexport function useReducer<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initialState: I & ReducerState<R>,\n  ...args: any[]\n) {\n  let id: string | number | undefined\n  let initializer:\n    | ((arg: I | (I & ReducerState<R>)) => ReducerState<R>)\n    | undefined\n\n  if (args.length === 2) {\n    initializer = args[0]\n    id = args[1]\n  } else if (typeof args[0] === \"string\" || typeof args[0] === \"number\") {\n    id = args[0]\n  } else {\n    initializer = args[0]\n    id = args[1]\n  }\n\n  const store = useContext(StateInspectorContext)\n\n  const initializedState = initializer\n    ? initializer(initialState)\n    : initialState\n\n  return store && id\n    ? useHookedReducer(reducer, initializedState, store, id)\n    : initializer\n    ? useReactReducer(reducer, initialState, initializer)\n    : useReactReducer(reducer, initialState)\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useHookedReducer } from \"./useReducer\"\nimport { useMemo, useContext, useState as useReactState } from \"react\"\nimport { EnhancedStore, StateInspectorContext } from \"./context\"\n\ntype StateAction<S> = S | ((s: S) => S)\n\nfunction stateReducer<S>(state: S, action: StateAction<S>): S {\n  return typeof action === \"function\" ? (action as (s: S) => S)(state) : action\n}\n\nexport const useState = <S>(\n  initialState: S | (() => S),\n  id: string | number\n) => {\n  const inspectorStore = useContext(StateInspectorContext)\n  // Keeping the first values\n  const [store, reducerId] = useMemo<\n    [EnhancedStore | undefined, string | number]\n  >(() => [inspectorStore, id], [])\n\n  if (!store || !reducerId) {\n    return useReactState<S>(initialState)\n  }\n\n  const finalInitialState = useMemo<S>(\n    () =>\n      typeof initialState === \"function\"\n        ? (initialState as () => S)()\n        : initialState,\n    []\n  )\n\n  return useHookedReducer<S, any>(\n    stateReducer,\n    finalInitialState,\n    store,\n    reducerId\n  )\n}\n"],"names":["StateInspectorContext","React","createContext","undefined","omit","obj","keyToRemove","Object","keys","filter","key","reduce","acc","StateInspector","name","initialState","children","store","useMemo","window","__REDUX_DEVTOOLS_EXTENSION__","registeredReducers","storeReducer","state","action","actionReducerId","type","split","isInitAction","test","isTeardownAction","currentState","reducerId","reducer","reducerState","reducerAction","payload","isForCurrentReducer","createStore","actionsBlacklist","registerHookedReducer","dispatch","useEffect","Provider","value","useHookedReducer","useState","initialStateInStore","getState","initialReducerState","localState","setState","teardown","lastReducerState","unsubscribe","subscribe","storeState","cleanup","useReducer","id","initializer","useContext","initializedState","useReactReducer","stateReducer","inspectorStore","useReactState","finalInitialState"],"mappings":"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"}